plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.11'
    id 'kotlinx-serialization' version '1.3.20'
    id 'application'
}

apply plugin: 'kotlin'
apply plugin: 'application'
group '1'
version '1.0'
mainClassName = "rain.MainKt"

sourceCompatibility = '11'
targetCompatibility= '11'

ext {
    gdxVersion = '1.9.9'
    jomlVersion = "1.9.12"
    lwjglVersion = "3.2.2-SNAPSHOT"
}

def os = System.getProperty("os.name").replace(' ', '').toLowerCase()
println "Building on $os.."

if (os.contains("windows")) {
    project.ext.lwjglNatives = "natives-windows"
}
else if (os.contains("macos")) {
    applicationDefaultJvmArgs = ["-XstartOnFirstThread"]
    project.ext.lwjglNatives = "natives-macos"
}
else {
    throw new RuntimeException("Operating system not supported!")
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

configurations {
    extraLibs
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    extraLibs group: "org.lwjgl", name: "lwjgl", version: "$lwjglVersion"
    extraLibs group: "org.lwjgl", name: "lwjgl-glfw", version: "$lwjglVersion"
    extraLibs group: "org.lwjgl", name: "lwjgl-opengl", version: "$lwjglVersion"
    extraLibs group: "org.lwjgl", name: "lwjgl-stb", version: "$lwjglVersion"
    extraLibs group: "org.lwjgl", name: "lwjgl-vma", version: "$lwjglVersion"
    extraLibs group: "org.lwjgl", name: "lwjgl-vulkan", version: "$lwjglVersion"
    extraLibs group: "org.joml", name: 'joml', version: "$jomlVersion"
    runtimeOnly "org.lwjgl:lwjgl:$lwjglVersion:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw:$lwjglVersion:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl:$lwjglVersion:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb:$lwjglVersion:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-vma:$lwjglVersion:$lwjglNatives"

    // TODO: Remove the gdx dependency!
    compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
    compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    compile "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"

    compile "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.10.0"

    if (os.contains("macosx")) {
        runtimeOnly "org.lwjgl:lwjgl-vulkan:$lwjglVersion:$lwjglNatives"
    }

    configurations.compile.extendsFrom(configurations.extraLibs)
}

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.noReflect = true
    kotlinOptions.noStdlib = true
    kotlinOptions.freeCompilerArgs = ['-Xno-param-assertions']
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    main.kotlin.srcDirs += "src"
}
